module Factorix
  class ModSettings
    VALID_SECTIONS: Array[String]

    class Section
      include Enumerable[[String, untyped]]
      attr_reader name: String

      def initialize: (String name) -> void
      def []=: (String key, untyped value) -> untyped
      def []: (String key) -> untyped
      def each: () { (String, untyped) -> void } -> void
              | () -> Enumerator[[String, untyped], void]
      def empty?: () -> bool
    end

    def initialize: (Pathname path) -> void
    def []: (String name) -> Section
    def each_section: () { (Section) -> void } -> void
                    | () -> Enumerator[Section, void]

    private
    def load_settings: (Pathname path) -> void
    def organize_into_sections: (Hash[String, Hash[String, Hash[String, untyped]]]) -> void
    def process_raw_settings: (Hash[String, Hash[String, Hash[String, untyped]]]) -> void
    def add_settings_to_section: (Section, Hash[String, Hash[String, untyped]]) -> void
    def ensure_all_sections_exist: () -> void
  end
end
